#include <ESP32Servo.h>
#include <PS4Controller.h>

static const int servoLeftFootPin = 13;
static const int servoLeftLegPin = 14;
static const int servoRightFootPin = 12;
static const int servoRightLegPin = 27;

Servo servoLeftFoot;
Servo servoLeftLeg;
Servo servoRightFoot;
Servo servoRightLeg;

bool wasSquarePressed = false;
bool wasCirclePressed = false;

void onConnect() {
  Serial.println("Connected!");
}

void onDisConnect() {
  Serial.println("Disconnected!");
}

void moveServosSmooth(Servo &servo1, int start1, int end1, Servo &servo2, int start2, int end2, int steps, int delayTime) {
  int diff1 = end1 - start1;
  int diff2 = end2 - start2;
  
  for (int i = 0; i <= steps; i++) {
    int pos1 = start1 + (diff1 * i / steps);
    int pos2 = start2 + (diff2 * i / steps);
    
    servo1.write(pos1);
    servo2.write(pos2);
    
    delay(delayTime);
  }
}

void returnToNeutral() {
  int currentLeftLeg = servoLeftLeg.read();
  int currentRightLeg = servoRightLeg.read();
  
  // Płynnie przestaw nogi do pozycji neutralnej
  moveServosSmooth(servoLeftLeg, currentLeftLeg, 60, servoRightLeg, currentRightLeg, 120, 20, 15);
  
  servoLeftFoot.write(90);
  servoRightFoot.write(90);
}

void setup() {
  servoLeftFoot.attach(servoLeftFootPin, 544, 2400);
  servoRightFoot.attach(servoRightFootPin, 544, 2400);
  
  servoLeftLeg.attach(servoLeftLegPin, 544, 2400);
  servoRightLeg.attach(servoRightLegPin, 544, 2400);

  servoLeftFoot.write(90);
  servoRightFoot.write(90);
  
  servoLeftLeg.write(60);
  servoRightLeg.write(120);

  Serial.begin(115200);
  PS4.attachOnConnect(onConnect);
  PS4.attachOnDisconnect(onDisConnect);
  PS4.begin();
  Serial.println("Ready.");

  delay(300);
}

void loop() {
  if (PS4.isConnected()) {
    if (PS4.Square()) {
      if (!wasSquarePressed) {  // Tylko gdy przycisk został właśnie wciśnięty
        servoLeftLeg.write(100);
        servoLeftFoot.write(90 + 17);
        wasSquarePressed = true;
      }
    } else {
      if (wasSquarePressed) {  // Tylko gdy przycisk został właśnie puszczony
        returnToNeutral();
        wasSquarePressed = false;
      }
    }

    if (PS4.Circle()) {
      if (!wasCirclePressed) {  // Tylko gdy przycisk został właśnie wciśnięty
        servoRightLeg.write(80);
        servoRightFoot.write(90 - 17);
        wasCirclePressed = true;
      }
    } else {
      if (wasCirclePressed) {  // Tylko gdy przycisk został właśnie puszczony
        returnToNeutral();
        wasCirclePressed = false;
      }
    }
  }
}
